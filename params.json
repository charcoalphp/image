{"name":"Charcoal-image","tagline":"Image manipulation library for PHP","body":"Charcoal Image\r\n==============\r\n\r\nCharcoal Image is a PHP image manipulation and processing library, currently built on top of `imagick`. \r\n\r\n\r\n## How to install\r\n\r\nThe preferred way of installing this module is with `composer`. Using composer, an autoloader is provided automatically with `PSR-4` so there is no further requirement.\r\n\r\n```shell\r\n$ composer require locomotivemtl/charcoal-image\r\n```\r\n\r\n## Dependencies\r\n\r\n- `PHP 5.4+`\r\n- `ext-imagick`\r\n  -  The `imagick` driver is the only available one at this time, and therefore is required as a hard dependency for now.\r\n\r\n> ðŸ‘‰ Although this module was developped for `Charcoal`, there is absolutely no dependencies on any Charcoal modules and can therefore be used in any PHP project.\r\n\r\n## Usage\r\n\r\n### With `set_data()`\r\n\r\n```php\r\n$img = new \\Charcoal\\Image\\Imagick\\ImagickImage();\r\n$img->set_data([\r\n    'source'=>'example.png',\r\n    'target'=>'example-modified.png',\r\n    'effects'=>[\r\n        [\r\n            'type'=>'resize',\r\n            'width'=>600\r\n        ],\r\n        [\r\n            'type'=>'blur',\r\n            'mode'=>'gaussian',\r\n            'sigma'=>15\r\n        ]\r\n    ]\r\n]);\r\n$img->process();\r\n$img->save();\r\n```\r\n\r\n### With magic (`__call()`) methods\r\n\r\n```php\r\nuse \\Charcoal\\Image\\Imagick\\ImagickImage as Image;\r\n\r\n$img = new Image();\r\n$img->open('example.png');\r\n$img->resize([\r\n    'width'=>600\r\n]);\r\n$img->blur([\r\n    'mode'=>'gaussian',\r\n    'sigma'=>15\r\n]);\r\n$img->save();\r\n```\r\n\r\n#### Chainable version\r\n\r\nAlso shown: using the `ImageFactory` constructor method:\r\n```php\r\nuse \\Charcoal\\Image\\ImageFactory;\r\n\r\n$img = ImageFactory::instance()->get('imagick');\r\n$img->open('example.png')\r\n  ->resize([\r\n    'mode'=>'best_fit',\r\n    'width'=>350\r\n    'height'=>350\r\n  ])\r\n  ->rotate([\r\n    'angle'=>90\r\n  ])\r\n  ->modulate([\r\n    'luminance'=>50\r\n  ])\r\n  ->save('modified-target.png');\r\n```\r\n\r\n## Available effects / operations\r\n\r\nAny image operation is called an \"effect\" and implements the `\\Charcoal\\Image\\EffectInterface` interface.\r\n\r\nThe available effects are:\r\n- Blur\r\n- Dither\r\n- Grayscale\r\n- Mask\r\n- Mirror\r\n- Modulate\r\n- Resize\r\n- Revert\r\n- Rotate\r\n- Sepia\r\n- Sharpen\r\n- Threshold\r\n- Tint\r\n- Watermark\r\n\r\n\r\n### Blur Effect\r\n**Blurs an image**\r\n\r\n#### Options\r\n- `mode` (_string_)\r\n  - The type of blur to apply. Possible valures are: `standard`, `adaptive`, gaussian`, `motion`, `radial`, `soft` (Currently unsupported)\r\n- `radius` (_float_)\r\n    - Defines the extent or size of the filter (technically, the size of the array which hold the calculated Gaussian distribution).\r\n    - If 0, a default optimal radius will be auto-determined.\r\n    - Bigger radius results in slower effect.\r\n    - Default is `0`.\r\n- `sigma` (_float_)\r\n    - Determines the actual amount of blurring that will take place.\r\n    - Default is `1`.\r\n\r\n- `channel` (_int_)\r\n- `angle` (_float_)\r\n  - The angle of the blur. Only used in `motion` or `radial` mode.\r\n  - Default is `0`.\r\n  - \r\n\r\n#### Modes\r\n- `standard`\r\n- `adaptive`\r\n- `gaussian`\r\n- `motion`\r\n- `radial`\r\n- `soft`\r\n\r\n### Dither Effect\r\n**Reduces an image's colors to a certain number, using dithering.**\r\n\r\n#### Options\r\n- `colors` (_int_)\r\n  - The number of colors to reduce to\r\n\r\n### Grayscale Effect\r\n**Converts an image's colors to a 256-colors greyscale. There are no options.**\r\n\r\n#### Options\r\n- _none_\r\n\r\n### Mask Effect\r\n**Apply a 8-bit transparency mask to the image.**\r\n\r\n#### Options\r\n- `mask` (_string_)\r\n- `opacity` (_float_)\r\n- `gravity` (_string_)\r\n- `x` (_integer_)\r\n- `y` (_integer_)\r\n\r\n### Mirror Effect\r\n**Flip an image horizontally or vertically.**\r\n\r\n#### Options\r\n - `axis` (_string_)\r\n   - The axis can be \"x\" (flip) or \"y\" (flop). \r\n   - Default is \"y\".\r\n\r\n### Modulate Effect\r\n**Modifies an image's colors in the special HSL (hue-saturation-luminance) colorspace.**\r\n\r\n#### Options\r\n- `hue` (_float_)\r\n  - The **color tint** value, between -100 and 100.\r\n  - Default is `0` (no effect)\r\n- `saturation` (_float_)\r\n  - The **color intensity** value, between -100 and 100.\r\n  - Default is `0` (no effect)\r\n- `luminance` (_float_)\r\n  - The **brightness** value, between -100 and 100.\r\n  - Default is `0` (no effect)\r\n\r\n### Resize Effect\r\n**Resize an image to given dimensions.**\r\n\r\n#### Options\r\n- `mode` (_string_)\r\n  - The type of resize operation to perform \r\n  - Valid modes are: `auto`, `exact`, `width`, `height`, `best_fit`, `crop`, `fill` or `none`.\r\n  - Default is `auto`.\r\n- `width` (_integer_)\r\n  - The target's width, in pixels.\r\n  - Mandatory in `width`, `exact`, `best_fit`, `crop` and `fill` modes\r\n  - Default is `0`.\r\n- `height` (_integer_)\r\n  - The target's height, in pixels.\r\n  - Mandatory in `height`, `exact`, `best_fit`, `crop` and `fill` modes\r\n  - Default is `0`.\r\n- `gravity`\r\n  - The gravity, only used in `crop` mode.\r\n  - Defaults to `center`\r\n- `background_color` (_string_)\r\n  - The background color, only used in `fill` mode.\r\n  - Can be specified as hexadecimal (\"#FF00FF\"), RGB values (\"rgb(255,0,255)\") or color name (\"red\").\r\n  - Default is _transparent-white_ (`rgb(100%, 100%, 100%, 0)`)\r\n- `adaptive`\r\n  \r\n#### Resize Modes\r\n- `auto`\r\n- `exact`\r\n- `width`\r\n- `height`\r\n- `best_fit`\r\n- `crop`\r\n- `fill`\r\n- `none`\r\n\r\n### Revert\r\n**Revert (negate) the image's colors.**\r\n\r\n#### Options\r\n- `channel` (_string_)\r\n\r\n### Rotate\r\n**Rotate the image by a certain angle.**\r\n\r\n#### Options\r\n- `angle` (_float_)\r\n    - The angle of rotation, in degrees (clockwise).\r\n    - Note that the dimension of the image can be modified if it is not square or if the angle is not a multiple of 90 degrees.\r\n    - Distortion will occur for any angle other than multiple of 90 degrees.\r\n    - Default to 0. (No rotation)\r\n- `background_color` (_string_)\r\n    - The background color of the canvas.\r\n    - Only used if the angle is not a multiple of _90_.\r\n    - Can be specified as hexadecimal (\"#FF00FF\"), RGB values (\"rgb(255,0,255)\") or color name (\"red\").\r\n    - Default is _transparent-white_ (`rgb(100%, 100%, 100%, 0)`)\r\n\r\n### Sepia\r\n**Tint the image with a vintage, sepia look**\r\n\r\n#### Options\r\n- `threshold` (_float_)\r\n  - The level of the sepia tone effect.\r\n  - Default is `75`.\r\n\r\n### Sharpen\r\n**Sharpen an image, with a simple sharpen algorithm or unsharp mask options.**\r\n\r\n#### Options\r\n- `mode`\r\n- `radius`\r\n- `sigma`\r\n- `amount`\r\n- `threshold`\r\n- `channel`\r\n\r\n### Threshold\r\n**Convert the image to monochrome (black and white).**\r\n\r\n#### Options\r\n- `threshold` (_float_)\r\n\r\n### Tint \r\n**Tint (or colorize) an image with a certain color.**\r\n\r\n#### Options\r\n- `color` (_string_)\r\n    - Color to blend unto the image.\r\n    - Can be specified as hexadecimal (\"#FF00FF\"), RGB values (\"rgb(255,0,255)\") or color name (\"red\").\r\n    - Default is black (`rgb(0,0,0)`).\r\n- `opacity` (_float_)\r\n    - Percentage of the value to blend, as a float between 0.0 and 1.0\r\n    - Default to 50% (`0.5`).\r\n- `midtone` (_boolean_)\r\n    - If true, then the color will be blended only to the midtones.\r\n    - Technically, true call the _tint_ function while false calls the _colorize_ function.\r\n    - Default is `true`.\r\n\r\n### Watermark\r\n**Composite a watermark on top of the image.**\r\n\r\n#### Options\r\n- `watermark` (_string_)\r\n- `opacity` (_float_)\r\n- `gravity` (_string_)\r\n- `x` (_integer_)\r\n- `y` (_integer_)\r\n\r\n### Future Effects\r\nThese effects are available in the `imagick` library and therefore could easily be added:\r\n- `Charcoal`\r\n- `Chop`\r\n- `Fx`\r\n- `Emboss`\r\n- `Blueshift`\r\n- `Border`\r\n- `Edge`\r\n- `Equalize`\r\n- `Gamma`\r\n- `Oilpaint`\r\n- `Posterize`\r\n- `Reducenoise`\r\n- `Swirl`\r\n- `Wave`\r\n\r\n## Development\r\n\r\n### Coding Style\r\n\r\nAll Charcoal modules follow the same coding style and `charcoal-core` is no exception. For PHP:\r\n\r\n- [_PSR-1_](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md), except for\r\n  - Method names MUST be declared in `snake_case`.\r\n- [_PSR-2_](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)\r\n- [_PSR-4_](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md), autoloading is therefore provided by _Composer_\r\n- [_phpDocumentor_](http://phpdoc.org/)\r\n- Arrays should be written in short notation (`[]` instead of `array()`)\r\n\r\nCoding styles are  enforced with `grunt phpcs` ([_PHP Code Sniffer_](https://github.com/squizlabs/PHP_CodeSniffer)). The actual ruleset can be found in `phpcs.xml`.\r\n\r\n> ðŸ‘‰ To fix minor coding style problems, run `grunt phpcbf` ([_PHP Code Beautifier and Fixer_](https://github.com/squizlabs/PHP_CodeSniffer)). This tool uses the same ruleset as *phpcs* to automatically correct coding standard violations.\r\n\r\nThe main PHP structure follow the [_PSR-4_](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md) standard. Autoloading is therefore provided by _Composer_.\r\n\r\n### Automated Checks\r\n\r\nMost quality checker tools can be run with _Grunt_. They are:\r\n\r\n- `grunt phpunit`, to run the Test Suite.\r\n- `grunt phpcs`, to ensure coding style compliance.\r\n\r\nAll three tools can also be run from `grunt watch`.\r\n\r\nTo ensure a clean code base, pre-commit git hooks should be installed on all development environments.\r\n\r\n### Continuous Integration\r\n\r\n- [Travis](https://travis-ci.org/)\r\n- [Scrutinizer](https://scrutinizer-ci.com/)\r\n- [Code Climate](https://codeclimate.com/)\r\n\r\n### Unit Tests\r\n\r\nEvery class, method, and function should be covered by unit tests. PHP code can be tested with [_PHPUnit_](https://phpunit.de/).\r\n\r\n## Authors\r\n\r\n- Mathieu Ducharme <mat@locomotive.ca>\r\n\r\n## Changelog\r\n\r\n- Unreleased.\r\n\r\n## TODOs\r\n\r\n- Write a version for GD\r\n- Write a version using the binary imagemagick tools directly ('mogrify')\r\n- Custom Exceptions\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}